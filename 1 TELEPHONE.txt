class HashTable:
    def __init__(self, size, method="separate_chaining"):
        self.size = size
        self.method = method
        if method == "separate_chaining":
            self.table = [[] for _ in range(size)]
        elif method == "linear_probing":
            self.table = [None] * size  
    def hash_function(self, key):
        return sum(ord(c) for c in key) % self.size
    def insert(self, key, value):
        index = self.hash_function(key)
        if self.method == "separate_chaining":
            self.table[index].append((key, value))
        elif self.method == "linear_probing":
            original_index = index
            while self.table[index] is not None:
                index = (index + 1) % self.size
                if index == original_index:
                    print("Hash table is full!")
                    return
            self.table[index] = (key, value)
    def search(self, key):
        index = self.hash_function(key)
        comparisons = 0
        if self.method == "separate_chaining":
            for k, v in self.table[index]:
                comparisons += 1
                if k == key:
                    return v, comparisons
        elif self.method == "linear_probing":
            start_index = index
            while self.table[index] is not None:
                comparisons += 1
                if self.table[index][0] == key:
                    return self.table[index][1], comparisons
                index = (index + 1) % self.size
                if index == start_index:
                    break
        return None, comparisons
def main():
    size = 10  # Size of hash table
    telephone_book = [
        ("Alice", "12345"),
        ("Bob", "67890"),
        ("Charlie", "54321"),
        ("David", "98765"),
        ("Eve", "56789"),
    ]
    ht_separate = HashTable(size, method="separate_chaining")
    for name, number in telephone_book:
        ht_separate.insert(name, number)
    ht_linear = HashTable(size, method="linear_probing")
    for name, number in telephone_book:
        ht_linear.insert(name, number)
    search_keys = ["Alice", "Charlie", "Eve"]
    print("Searching for keys using Separate Chaining:")
    for key in search_keys:
        result, comparisons = ht_separate.search(key)
        print(f"Key:{key},Value:{result},Comparisons:{comparisons}")
    print("\nSearching for keys using Linear Probing:")
    for key in search_keys:
        result, comparisons = ht_linear.search(key)
        print(f"Key:{key},Value:{result},Comparisons:{comparisons}")
if __name__ == "__main__":
    main()